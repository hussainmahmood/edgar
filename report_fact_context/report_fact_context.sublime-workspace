{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"report",
				"report_id"
			],
			[
				"reports",
				"reports"
			],
			[
				"rep",
				"reports"
			],
			[
				"cont",
				"context_ids"
			],
			[
				"repo",
				"report_ids"
			],
			[
				"repot",
				"report_id"
			],
			[
				"conte",
				"context"
			],
			[
				"con",
				"context_id"
			],
			[
				"c_",
				"c_row"
			],
			[
				"context_ids",
				"context_ids"
			],
			[
				"re",
				"reports"
			],
			[
				"context",
				"context_new"
			],
			[
				"me",
				"member_local_name"
			],
			[
				"Cont",
				"ContextMemeber"
			],
			[
				"Co",
				"ContextDimension"
			],
			[
				"fro",
				"f_row"
			],
			[
				"ele",
				"element_local_name"
			],
			[
				"miss",
				"missing_report"
			],
			[
				"missing",
				"missing_fact"
			],
			[
				"mi",
				"missing_facts_report"
			],
			[
				"r_row",
				"r_rows"
			],
			[
				"count",
				"count"
			],
			[
				"missing_con",
				"missing_context_dim"
			],
			[
				"f_row",
				"f_row_count"
			],
			[
				"f_r",
				"f_row_counts"
			],
			[
				"c",
				"count"
			],
			[
				"c_row_",
				"c_row_counts"
			],
			[
				"c_r",
				"c_rows"
			],
			[
				"context_dimen",
				"context_dimension_explicit"
			],
			[
				"ps",
				"psql_conn"
			],
			[
				"sql",
				"sql_conn"
			],
			[
				"repor",
				"report_ids"
			],
			[
				"sql_",
				"sql_engine"
			],
			[
				"i",
				"i"
			],
			[
				"fact",
				"fact_id"
			],
			[
				"a",
				"addr"
			],
			[
				"s",
				"state"
			],
			[
				"add",
				"addr"
			],
			[
				"ad",
				"addr"
			],
			[
				"bu",
				"business_phone"
			],
			[
				"S",
				"STATE_INCORP"
			],
			[
				"BUS",
				"BUS_PHONE"
			],
			[
				"DOC",
				"DOC_TYPE"
			],
			[
				"BU",
				"BUS_CITY"
			],
			[
				"Char",
				"character"
			],
			[
				"e",
				"extends_keyword"
			],
			[
				"extends",
				"extends_keyword"
			],
			[
				"extend",
				"extends_keyword"
			],
			[
				"clas",
				"class_node"
			],
			[
				"cla",
				"class_nodes"
			],
			[
				"cl",
				"class_node"
			],
			[
				"class",
				"class_body_node"
			],
			[
				"cur",
				"curr_token"
			],
			[
				"toke",
				"token"
			],
			[
				"token",
				"token_ix"
			],
			[
				"type",
				"type_mod"
			],
			[
				"strin",
				"string_with_arrows"
			],
			[
				"ne",
				"nextTwo"
			],
			[
				"err",
				"errors"
			],
			[
				"er",
				"errors"
			],
			[
				"pos",
				"pos_start"
			],
			[
				"Ill",
				"IllegalChar"
			],
			[
				"Inval",
				"InvalidLexeme"
			],
			[
				"__",
				"__init__"
			],
			[
				"de",
				"details"
			],
			[
				"table_",
				"table_data"
			],
			[
				"table",
				"table_data"
			],
			[
				"metadta",
				"metadata"
			],
			[
				"conn",
				"connect"
			],
			[
				"ms",
				"ms_sql"
			],
			[
				"Da",
				"DateTime"
			],
			[
				"conne",
				"connecting"
			],
			[
				"ava",
				"available_route"
			],
			[
				"as",
				"as_source"
			],
			[
				"cit",
				"city_id"
			],
			[
				"reci",
				"recieving_city"
			],
			[
				"deli",
				"delivering_city"
			],
			[
				"Decimal",
				"DecimalField"
			],
			[
				"auto",
				"auto_now"
			],
			[
				"Dat",
				"DateTimeField"
			],
			[
				"mode",
				"mode_of_delivery"
			],
			[
				"L",
				"LOCAL_CITY"
			],
			[
				"Mode",
				"ModeOfDelivery"
			],
			[
				"var",
				"variation"
			],
			[
				"pri",
				"pricing_id"
			],
			[
				"pricing_",
				"pricing_id"
			],
			[
				"uk-margin",
				"uk-margin-auto-vertical"
			],
			[
				"min",
				"min-height\tproperty"
			],
			[
				"uk-mar",
				"uk-margin-remove"
			],
			[
				"margin",
				"margin-top\tproperty"
			],
			[
				"uk-padd",
				"uk-padding-remove-vertical"
			],
			[
				"uk-width",
				"uk-width-auto"
			],
			[
				"tra",
				"transit_tax"
			],
			[
				"bid_",
				"bid_container"
			],
			[
				"bid",
				"bid_active"
			],
			[
				"and",
				"and"
			],
			[
				"if",
				"if\tIf Condition"
			],
			[
				"conf_",
				"conf_offers"
			],
			[
				"act",
				"act_button"
			],
			[
				"sale",
				"sale_status"
			],
			[
				"unco",
				"unconf_sales"
			],
			[
				"conf",
				"confirmed_offers"
			],
			[
				"get",
				"get_confirmation_status_display"
			],
			[
				"sa",
				"sale"
			],
			[
				"confirma",
				"confirmation_status"
			],
			[
				"accep",
				"accept"
			],
			[
				"offer",
				"offer"
			],
			[
				"off",
				"offers_info"
			],
			[
				"new",
				"new_offer"
			],
			[
				"acce",
				"accepted"
			],
			[
				"mx-border",
				"mx-border-top"
			],
			[
				"service",
				"service"
			],
			[
				"sales",
				"sales_tax"
			],
			[
				"to",
				"total"
			],
			[
				"uk-ta",
				"uk-table"
			],
			[
				"fon",
				"font-size\tproperty"
			],
			[
				"uk-text",
				"uk-text-nowrap"
			],
			[
				"inde",
				"indexOf"
			],
			[
				"pro",
				"product_variation"
			],
			[
				"pricing",
				"pricing_container"
			],
			[
				"pric",
				"pricing_id"
			],
			[
				"mx-offer",
				"mx-offer-info"
			],
			[
				"product",
				"product_id"
			],
			[
				"pricin",
				"pricing"
			],
			[
				"mx-offe",
				"mx-offer-info-nav"
			],
			[
				"close",
				"closest"
			],
			[
				"per",
				"percent_demand"
			],
			[
				"offer_i",
				"offer_info_container"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 7275,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "upsplit_fact.py",
			"settings":
			{
				"buffer_size": 2115,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "upsplit_context.py",
			"settings":
			{
				"buffer_size": 2550,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "context_dimension_explicit.py",
			"settings":
			{
				"buffer_size": 3718,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "requirements.txt",
			"settings":
			{
				"buffer_size": 527,
				"line_ending": "Windows"
			}
		},
		{
			"file": "missing.py",
			"settings":
			{
				"buffer_size": 1396,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/scripts/report_fact_context"
	],
	"file_history":
	[
		"/D/scripts/report_fact_context/get_missing.py",
		"/D/scripts/report_fact_context/fact.py",
		"/D/scripts/report_fact_context/main.py",
		"/D/scripts/fact_table/db_name.py",
		"/D/scripts/report_table/db_name.py",
		"/D/scripts/report_table/main.py",
		"/D/compiler/src/lexer.py",
		"/D/compiler/src/serv/io.py",
		"/D/compiler/src/main.py",
		"/D/compiler/src/io/token_set.json",
		"/D/compiler/src/serv/string_with_arrows.py",
		"/D/compiler/src/io/code.txt",
		"/D/compiler/src/definition/definitions.py",
		"/D/compiler/src/serv/lexical_analyzer.py",
		"/home/programmers-inn/Desktop/compiler/src/definition/definitions.py",
		"/home/programmers-inn/Desktop/compiler/src/services/io.py",
		"/home/programmers-inn/Desktop/compiler/src/services/lexical_analyzer.py",
		"/home/programmers-inn/Desktop/compiler/src/output/token_set.json",
		"/home/programmers-inn/Desktop/compiler/src/main.py",
		"/home/programmers-inn/Desktop/compiler/src/definitions/definitions.py",
		"/home/programmers-inn/Desktop/compiler/src/output/token_set",
		"/home/programmers-inn/Desktop/compiler/src/definitions/enums.py",
		"/home/programmers-inn/Desktop/compiler/src/helpers/language_definition.py",
		"/home/programmers-inn/Desktop/compiler/src/helpers/enums.py",
		"/home/programmers-inn/Desktop/compiler/src/services/file_system.py",
		"/home/programmers-inn/Desktop/compiler/src/input/code.txt",
		"/home/programmers-inn/Desktop/compiler/src/models/token.py",
		"/home/programmers-inn/Desktop/compiler/src/helpers/language_defination.py",
		"/home/programmers-inn/Desktop/compiler/src/models/language_defined_constant.py",
		"/home/programmers-inn/Desktop/compiler/src/services/__init__.py",
		"/home/programmers-inn/Desktop/compiler/src/helpers/language_defination.ts",
		"/home/programmers-inn/Desktop/compiler/src/helpers/__init__.py",
		"/home/programmers-inn/Desktop/compiler/src/models/__init__.py",
		"/home/programmers-inn/Desktop/edgar_scrapper/main.py",
		"/home/programmers-inn/Desktop/edgar_scrapper/script.py",
		"/home/programmers-inn/Desktop/edgar_scrapper/models/__init__.py",
		"/home/programmers-inn/Desktop/edgar_scrapper/src/script.py",
		"/home/programmers-inn/Desktop/edgar_scrapper/models/models.py",
		"/home/programmers-inn/Desktop/sql_linker/models1.py",
		"/home/programmers-inn/Desktop/sql_linker/models.py",
		"/home/programmers-inn/Desktop/sql_linker/linker/main.py",
		"/home/programmers-inn/Desktop/sql_linker/linker.py",
		"/home/programmers-inn/Desktop/sql_linker/__pycache__/models.cpython-38.pyc",
		"/home/programmers-inn/.virtualenvs/sql_linker/lib/python3.8/site-packages/sqlacodegen/codegen.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/admin.py",
		"/home/programmers-inn/Desktop/mercantileX/src/mercantileX/settings.py",
		"/home/programmers-inn/Desktop/mercantileX/static/static/js/wakeup.js",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/edit_product.html",
		"/home/programmers-inn/Desktop/mercantileX/static/wakeup.js",
		"/home/programmers-inn/Desktop/mercantileX/static/static/css/uikit.min.css",
		"/home/programmers-inn/Desktop/mercantileX/src/mercantileX/consumers.py",
		"/home/programmers-inn/Desktop/mercantileX/static/static/js/market.js",
		"/home/programmers-inn/Desktop/mercantileX_backup/mercantileX 1-2-21/src/market/templates/product.html",
		"/home/programmers-inn/Desktop/mercantileX_backup/mercantileX 1-2-21/src/market/templates/manage_bids.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/base.html",
		"/usr/share/themes/WhiteSur-dark/gnome-shell/gnome-shell.css",
		"/usr/share/themes/WhiteSur-dark/gnome-shell/pad-osd.css",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/subcategory.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/product.html",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/models.py",
		"/home/programmers-inn/Desktop/mercantileX_backup/backup/mercantileX 12-17-20/src/market/models.py",
		"/home/programmers-inn/Desktop/mercantileX/static/static-only/admin/js/vendor/jquery/jquery.js",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0074_auto_20201222_1534.py",
		"/home/programmers-inn/Desktop/mercantileX_backup/mercantileX/src/market/models.py",
		"/home/programmers-inn/october/script.py",
		"/home/programmers-inn/Desktop/mercantileX/static/static/js/vue.min.js",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0073_auto_20201217_1435.py",
		"/home/programmers-inn/Desktop/mercantileX/static/static/js/warehouse.js",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/views.py",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/templates/warehouse.html",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/templates/w_base.html",
		"/home/programmers-inn/Desktop/mercantileX/static/static/js/ajax_initializer.js",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/admin.py",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/templates/static/w_404.html",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/templates/w_login.html",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/templates/static/w_nav.html",
		"/home/programmers-inn/Desktop/mercantileX/src/mercantileX/urls.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/store.html",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/templates/warehouse_base.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/models.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/views.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/manage_purchases.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/manage_sales.html",
		"/home/programmers-inn/Desktop/mercantileX/src/mercantileX/routing.py",
		"/home/programmers-inn/Desktop/mercantileX/src/warehouse/templates/subcategory.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/consumers.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/manage_bids.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/manage_products.html",
		"/home/programmers-inn/Desktop/mercantileX_backup/backup/mercantileX 8-26-20/src/market/templates/subcategory.html",
		"/home/programmers-inn/Desktop/mercantileX_backup/backup/mercantileX 8-26-20/src/mercantileX/urls.py",
		"/home/programmers-inn/Desktop/mercantileX_backup/backup/mercantileX 8-26-20/src/market/views.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0067_auto_20201211_1344.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0068_auto_20201211_2043.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0064_auto_20201211_0004.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0001_initial.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0041_auto_20201205_0231.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0063_company_image.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0040_auto_20201204_1823.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/add_product.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/company.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/static/nav.html",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0048_auto_20201206_2156.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/context_processors.py",
		"/home/programmers-inn/Desktop/mercantileX/static/static-only/leaflet/leaflet-src.js",
		"/home/programmers-inn/Desktop/mercantileX/static/static-only/leaflet/Control.MiniMap.js",
		"/home/programmers-inn/Desktop/mercantileX/static/static-only/leaflet/draw/leaflet.draw-src.js",
		"/home/programmers-inn/Desktop/mercantileX/static/static-only/leaflet/proj4.js",
		"/home/programmers-inn/Desktop/mercantileX/static/static-only/leaflet/leaflet.extras.js",
		"/home/programmers-inn/Desktop/mercantileX/static/static-only/leaflet/leaflet.forms.js",
		"/home/programmers-inn/Desktop/mercantileX/static/static-only/leaflet/leaflet.js",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0035_auto_20201201_0904.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/migrations/0037_auto_20201201_0902.py",
		"/home/programmers-inn/Desktop/mercantileX_backup/mercantileX_new/src/market/views.py",
		"/home/programmers-inn/Desktop/mercantileX_backup/mercantileX_new/src/market/templates/base.html",
		"/home/programmers-inn/Desktop/mercantileX_backup/backup/mercantileX 11-30-20/src/market/templates/base.html",
		"/home/programmers-inn/Desktop/mercantileX_backup/backup/mercantileX 11-30-20/src/market/views.py",
		"/home/programmers-inn/Desktop/mercantileX_backup/backup/mercantileX 11-30-20/src/market/models.py",
		"/home/programmers-inn/Desktop/mercantileX/src/market/templates/static/scripts.html",
		"/home/programmers-inn/Desktop/mercantileX_backup/backup/mercantileX 11-20-20/src/market/templates/product.html",
		"/etc/redis/redis.conf",
		"/home/programmers-inn/Desktop/mercantileX/src/nano",
		"/home/programmers-inn/Desktop/mercantileX/src/sudo"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"r_row.report_id",
			"c_row.",
			"r_row.report_id",
			"f_",
			"100",
			"dimension_local_name",
			"dl",
			"r_",
			"r",
			"fact",
			"element",
			"[edgar_db_1].",
			"errored_out.append(missing_report)",
			"r_row.report_id",
			"@REPORT_ID",
			"errored_out.append(missing_fact)",
			"r_row.report_id",
			"missing_fact",
			"r_row.report_id",
			"errored_out.append(i)",
			"                                    \n",
			"i <",
			"{i}",
			"except:",
			"19, 7",
			"Unicode",
			"BIT",
			"Unicode",
			"\"",
			"2000",
			":",
			",",
			" ,",
			"0",
			"fact",
			"]",
			"[",
			"BIT",
			"Unicode",
			"i = 0\n    while i < count:\n        session = Session()\n        res = conn.execute(f'SELECT [properties] FROM [dbo].[report] ORDER BY [report_id] OFFSET {i} ROWS FETCH NEXT 10000 ROWS ONLY')\n        for row in res:\n            accession = {'MANDT': \"100\", 'ACCESSIONNO': None, 'DOC_ZIPURL': None, 'DOC_URL': None, 'DATE_FILED': None, \n                        'DOC_TYPE': None, 'BUS_STREETADR1': None, 'BUS_STREETADR2': None, 'BUS_CITY': None, 'BUS_STATE': None, \n                        'BUS_ZIPCODE': None, 'BUS_PHONE': None, 'SIC': None, 'IRS': None, 'STATE_INCORP': None, \n                        'PERCENT_EXTENDED': None}\n            row = row.properties\n            row = json.loads(row)\n            accession['ACCESSIONNO'] = row['filing_accession_number']\n            accession['DOC_ZIPURL'] = row['zip_url']\n            accession['DOC_URL'] = row['sec_html_url']\n            accession['DATE_FILED'] = row['filing_date']\n            accession['DOC_TYPE'] = row['document_type']\n            accession['SIC'] = row['standard_industrial_classification']\n            accession['IRS'] = row['internal_revenue_service_number']\n            accession['STATE_INCORP'] = row['state_of_incorporation']\n            accession['PERCENT_EXTENDED'] = row['percent_extended']\n            \n            if re.match(\"^[^a-zA-Z]{0,16}$\", str(row['business_phone'])):\n                accession['BUS_PHONE'] = row['business_phone']\n            \n            if row['business_address']:\n                addr_arr = row['business_address'].split(\", \")\n                if len(addr_arr) == 2:\n                    accession['BUS_STREETADR1'] = addr_arr[0]\n                elif len(addr_arr) == 3:\n                    accession['BUS_STREETADR1'] = addr_arr[0]\n                    accession['BUS_STREETADR2'] = addr_arr[1]\n                elif len(addr_arr) > 3:\n                    arr_len = len(addr_arr)\n                    half = int(arr_len/2)\n                    if arr_len % 2 != 0:\n                        arr_len += 1\n                        half = int(arr_len/2)\n\n                    accession['BUS_STREETADR1'] = \", \".join(addr_arr[:half])\n                    accession['BUS_STREETADR2'] = \", \".join(addr_arr[half:arr_len-1])\n                \n                addr_arr = addr_arr[len(addr_arr)-1].split()\n                \n                for addr in addr_arr:\n                    if re.match(\"^[^a-zA-Z]{0,10}$\", str(addr)):\n                        accession['BUS_ZIPCODE'] = addr\n                        addr_arr.remove(addr)\n\n                for addr in addr_arr:\n                    if len(addr) < 3:\n                        accession['BUS_STATE'] = addr\n                        addr_arr.remove(addr)\n\n                if addr_arr: accession['BUS_CITY'] = \" \".join(addr_arr)\n                \n            session.add(ACCESSIONNo(**accession))\n\n        try:\n            session.commit()\n        except Exception as e:\n            print(e)\n            session.rollback()\n        finally:\n            i += 10000\n            session.close()",
			"   accession['BUS_PHONE'] = row['business_phone']\n            # if row['business_address']:\n            #     addr_arr = row['business_address'].split(\", \")\n            #     if len(addr_arr) == 2:\n            #         accession['BUS_STREETADR1'] = addr_arr[0]\n            #     elif len(addr_arr) == 3:\n            #         accession['BUS_STREETADR1'] = addr_arr[0]\n            #         accession['BUS_STREETADR2'] = addr_arr[1]\n            #     elif len(addr_arr) > 3:\n            #         arr_len = len(addr_arr)\n            #         half = int(arr_len/2)\n            #         if arr_len % 2 != 0:\n            #             arr_len += 1\n            #             half = int(arr_len/2)\n\n            #         accession['BUS_STREETADR1'] = \", \".join(addr_arr[:half])\n            #         accession['BUS_STREETADR2'] = \", \".join(addr_arr[half:arr_len-1])\n                \n            #     addr_arr = addr_arr[len(addr_arr)-1].split()\n            #     if len(addr_arr) > 2:\n            #         accession['BUS_CITY'] = \" \".join(addr_arr[:len(addr_arr)-2])\n\n            #     accession['BUS_STATE'] = addr_arr[len(addr_arr)-2]\n            #     accession['BUS_ZIPCODE'] = addr_arr[len(addr_arr)-1]\n\n            # session.add(ACCESSIONNo(**accession))",
			")\n",
			"len(addr_arr)"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7275,
						"regions":
						{
						},
						"selection":
						[
							[
								4463,
								4463
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1748.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "upsplit_fact.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2115,
						"regions":
						{
						},
						"selection":
						[
							[
								1059,
								1059
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 239.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "upsplit_context.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2550,
						"regions":
						{
						},
						"selection":
						[
							[
								886,
								886
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 419.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "context_dimension_explicit.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3718,
						"regions":
						{
						},
						"selection":
						[
							[
								1600,
								1600
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 752.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "requirements.txt",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 527,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "missing.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1396,
						"regions":
						{
						},
						"selection":
						[
							[
								389,
								389
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "report_fact_context.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\scripts\\edgar_scrapper_backup\\edgar_scrapper.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 289.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
